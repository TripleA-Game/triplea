plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id 'com.install4j.gradle' version '7.0.1'
    id 'de.undercouch.download' version '3.4.2'
    id 'net.ltgt.errorprone' version '0.0.13'
}

group = 'triplea'
description = 'TripleA Lobby'
mainClassName = 'games.strategy.engine.lobby.server.LobbyRunner'

ext {
    artifactsDir = file("$buildDir/artifacts")
}

version = project.hasProperty('lobbyVersion') ? project.lobbyVersion : 'dev'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.compilerArgs += [ '-Xlint:all', '-Xmaxwarns', '1000' ]
    
    // workaround for: https://github.com/google/error-prone/issues/780
    options.compilerArgs += [ '-Xep:ParameterName:OFF' ]
    
    options.incremental = true
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.compilerArgs += [ '-Xep:ClassCanBeStatic:OFF' ]
}


jar {
    manifest {
        attributes 'Main-Class': mainClassName, 'TripleA-Version': version
    }
}

repositories {
    jcenter()
    maven {
       url 'https://jitpack.io'
    }
}

dependencies {
    errorprone 'com.google.errorprone:error_prone_core:2.2.0'

    compile project(':game-core')

    compileOnly 'org.projectlombok:lombok:1.16.20'

    testCompile 'com.github.junit-team.junit5-samples:junit5-mockito-extension:e9b64bd'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:2.4.5'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.mockito:mockito-core:2.16.0'
    testCompile 'org.sonatype.goodies:goodies-prefs:2.2.4'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.1.0'
    testRuntime 'org.slf4j:slf4j-nop:1.7.25'
}

test {
    useJUnitPlatform()
}

shadowJar {
    destinationDir = libsDir
    baseName = 'triplea-lobby'
    classifier = 'all'
}

task lobbyServer(type: Zip, group: 'release', dependsOn: shadowJar) {
    baseName = 'triplea'
    classifier = 'server'
    from('lobby.properties') {
        into('config/lobby')
    }
    from(shadowJar.outputs) {
        into('bin')
    }
}

task release(group: 'release', dependsOn: lobbyServer) {
    doLast {
        def artifacts = [
            file("$distsDir/triplea-$version-server.zip"),
        ]
        artifacts.each {
            if (!it.exists()) {
                throw new GradleException("artifact '$it' does not exist")
            }
        }

        copy {
            from artifacts
            into artifactsDir
        }
    }
}

checkstyle {
    toolVersion = "8.8"
    configFile = file("$rootProject.projectDir/config/checkstyle/checkstyle.xml")
    configProperties = [samedir: configFile.parent]
}

checkstyleMain {
    maxWarnings = 0
    source sourceSets.main.output.resourcesDir
}

checkstyleTest {
    maxWarnings = 0
    source sourceSets.test.output.resourcesDir
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
