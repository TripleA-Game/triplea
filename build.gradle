plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'net.ltgt.errorprone' version '0.0.15' apply false
}

apply from: 'gradle/scripts/yaml.gradle'

description = 'TripleA is a free online turn based strategy game and board game engine, similar to such board games as Axis & Allies or Risk.'

ext {
    schemasDir = file('config/triplea/schemas')
}

check {
    dependsOn 'validateYamls'
}

task validateYamls(group: 'verification', description: 'Validates YAML files.') {
    doLast {
        def lobbyServerYamlFile = file('lobby_server.yaml')
        validateYaml(lobbyServerYamlFile, file("$schemasDir/lobby_server.json"))

        def mapsYamlFile = file('triplea_maps.yaml')
        validateYaml(mapsYamlFile, file("$schemasDir/triplea_maps.json"))
        validateMapsYamlUris(mapsYamlFile)
    }
}

subprojects {
    group = 'triplea'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    ext {
        hamcrestVersion = '2.0.0.0'
        junitJupiterVersion = '5.1.0'
        lombokVersion = '1.18.0'
        mockitoVersion = '2.19.1'
        postgresqlVersion = '42.2.2'
    }

    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'java'
    apply plugin: 'net.ltgt.errorprone'

    apply from: "${rootProject.projectDir}/gradle/scripts/release.gradle"
    apply from: "${rootProject.projectDir}/gradle/scripts/version.gradle"

    repositories {
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
    }

    dependencies {
        compile 'com.google.guava:guava:24.1-jre'

        compileOnly "org.projectlombok:lombok:$lombokVersion"

        errorprone 'com.google.errorprone:error_prone_core:2.3.1'

        testCompile 'nl.jqno.equalsverifier:equalsverifier:2.4.5'
        testCompile "org.hamcrest:java-hamcrest:$hamcrestVersion"
        testCompile "org.mockito:mockito-core:$mockitoVersion"
        testCompile "org.mockito:mockito-junit-jupiter:$mockitoVersion"

        testCompileOnly "org.projectlombok:lombok:$lombokVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"

        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
        testRuntime 'org.junit.platform:junit-platform-launcher:1.1.0'
        testRuntime 'org.slf4j:slf4j-nop:1.7.25'

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += [
            '-Xep:ParameterName:OFF', // workaround for https://github.com/google/error-prone/issues/780
            '-Xlint:all',
            '-Xmaxwarns', '1000'
        ]
        options.encoding = 'UTF-8'
        options.incremental = true
    }

    check {
        dependsOn 'integTest'
    }

    checkstyle {
        toolVersion = "8.8"
        configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        configProperties = [samedir: configFile.parent]
    }

    checkstyleMain {
        maxWarnings = 0
        source = sourceSets.main.output.resourcesDir
    }

    checkstyleTest {
        maxWarnings = 0
        source = sourceSets.test.output.resourcesDir
    }

    compileTestJava {
        options.compilerArgs += ['-Xep:ClassCanBeStatic:OFF']
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    test {
        useJUnitPlatform {
            excludeTags 'integration'
        }
    }

    task integTest(type: Test) {
        useJUnitPlatform {
            includeTags 'integration'
        }
    }
}
