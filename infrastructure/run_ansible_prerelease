#!/bin/bash

# This script is used to execute prerelease deployments by building artifacts
# and then deploying them via ansible.

VERSION=${1-$(sed 's/.*=\s*//' ../game-core/src/main/resources/META-INF/triplea/product.properties)}
shift

VAULT_PASSWORD_FILE="vault_password"
if [ ! -f "$VAULT_PASSWORD_FILE" ]; then
  echo "Error: $VAULT_PASSWORD_FILE must exist"
  exit 1
fi

set -eu

function main() {
  .include/build_latest_artifacts "$VERSION"
  addPrivateSshKeyToAgent
  runDeployment "$@"
  runCleanup
}

function addPrivateSshKeyToAgent() {
  ansible-vault view \
    --vault-password-file="$VAULT_PASSWORD_FILE" \
    ansible_ssh_key.ed25519 \
  | ssh-add -
}

function runDeployment() {
  ansible-playbook \
    --extra-vars "version=$VERSION" \
    --extra-vars "using_latest=true" \
    --vault-password-file "$VAULT_PASSWORD_FILE" \
    --inventory ansible/inventory/prerelease \
   "$@" \
   ansible/site.yml
}

function runCleanup() {
  # Remove all lobby_server binary files except the current one.
  # With grep -v we filter out folders that begin with a '.'
  ansible -i ansible/inventory/prerelease lobbyServer -m shell -a \
    "find /home/lobby_server -type d -mindepth 1 | grep -Ev \"/\.|$VERSION\" | xargs --no-run-if-empty rm -rf"
 
  # remove folders under bot (each deployment folder), eg: /home/bot/2.3.21496
  # With grep -v we filter out folders that begin with a '.', and the 'maps' folder and run_server script 
  ansible -i ansible/inventory/prerelease botHosts -m shell -a \
    "find /home/bot -type d -mindepth 1 -maxdepth 1 | grep -Ev \"/\.|maps|run_server|$VERSION\" | xargs --no-run-if-empty rm -rf"

  # auto-remove to clean up /usr/lib/modules, each kernel update leaves data in that folder  
  ansible -i ansible/inventory/prerelease all -m shell -a \
    "sudo apt autoremove"
}

main "$@"

