#!/bin/bash

set -x
# This script is used to execute prerelease deployments by building artifacts
# and then deploying them via ansible.


VAULT_PASSWORD_FILE="vault_password"
if [ ! -f "$VAULT_PASSWORD_FILE" ]; then
  echo "Error: file: $VAULT_PASSWORD_FILE must exist"
  exit 1
fi

set -eu

VERSION=$(sed 's/.*=\s*//' $(find .. -path "*/src/main/*" -name "product.properties"))

$(dirname $0)/.include/install-mitogen

function main() {
  .include/build_latest_artifacts "$VERSION"
  addPrivateSshKeyToAgent
  runDeployment "$@"
  runCleanup
}

function addPrivateSshKeyToAgent() {
  ansible-vault view \
    --vault-password-file="$VAULT_PASSWORD_FILE" \
    ansible_ssh_key.ed25519 \
  | ssh-add -
}

function runDeployment() {
  ansible-playbook \
    --extra-vars "version=$VERSION" \
    --skip-tags release \
    --vault-password-file "$VAULT_PASSWORD_FILE" \
    --inventory ansible/inventory/prerelease \
   "$@" ansible/site.yml
}

function runCleanup() {
  # auto-remove to clean up /usr/lib/modules, each kernel update leaves data in that folder
  echo "Removing old kernel patches.."
  ansible -i ansible/inventory/prerelease all --become-user=root -m shell -a \
    "sudo apt autoremove -y"
}

main "$@"

