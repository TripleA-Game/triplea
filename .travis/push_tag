#!/bin/bash

#
# This script pushes a tag to github, that creates a github release and triggers a travis release build
# which then builds the release artifacts and deploys them to the github release.
#
# Note, the tag itself is also considered a branch and trigger an extraneous branch build in travis.
#

set -u

main() {
  configGithub
  deleteExistingTag
  createTag
  pushTag
}

configGithub() {
  echo "Configure Git and PUSH A TAG - this trigger and execute the deploy section of this same build file, in the same travis linux container (skip_cleanup setting below is important)"
  git config --global user.email "tripleabuilderbot@gmail.com"
  git config --global user.name "tripleabuilderbot"
}


deleteExistingTag() {
  echo "Attempting to delete tag $TAGGED_VERSION, this is so we will recreate the release if this build is being re-run."
  ## sed is to mask out access token in case the https url is printed 
  git push -q https://$GITHUB_PERSONAL_ACCESS_TOKEN_FOR_TRAVIS@github.com/triplea-game/triplea ":refs/tags/$TAGGED_VERSION" \
     | sed 's|https://.*github|https://[secure]@github|'
  git tag -d "$TAGGED_VERSION"

  echo "Done doing tag deletes, ignore any errors immediately above if there are any for failing to delete non-existent tags"
} 



createTag() {
  echo -n "Tagging current branch .. "
  git tag "$TAGGED_VERSION" -a -m "$TAGGED_VERSION"
  result=$?
  if [ "$result" == 0 ]; then
    echo "Success - created tag: $TAGGED_VERSION"
  else 
    echo "Failed - did not create tag: $TAGGED_VERSION"
    exit 1
  fi
}

pushTag() {
  echo "Pushing tag: $TAGGED_VERSION to github to trigger releases deployment"

  git push -q https://$GITHUB_PERSONAL_ACCESS_TOKEN_FOR_TRAVIS@github.com/triplea-game/triplea --tags 2>&1 | sed 's|https://.*github|https://[secure]@github|'
  result=$?

  if [ "$result" == 0 ]; then
    echo "Successfully pushed tag $TAGGED_VERSION to github!" | cowsay
  else
    echo "FAILED to push tag $TAGGED_VERSION to github!" | cowsay -d
    exit 1
  fi
}

main
