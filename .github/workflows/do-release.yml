name: Master Branch Release
on:
  push:
    branches:
      - master
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: Master Branch Release Actions
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: set build version variables
        run: |
          BUILD_NUMBER=$(.build/set-build-number ${{ github.run_number }})
          echo "product_version=$BUILD_NUMBER" | tee -a $GITHUB_ENV

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
              echo "is_prerelease=true" | tee -a $GITHUB_ENV
              echo "release_name=$(date +%Y-%B-%d) - Prerelease - $BUILD_NUMBER" | tee -a $GITHUB_ENV
          else
              echo "is_prerelease=false" | tee -a $GITHUB_ENV
              echo "release_name=$(date +%Y-%B) - Release - $BUILD_NUMBER" | tee -a $GITHUB_ENV
          fi
      - name: Build Installers
        run: .build/build-installer
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          INSTALL4J_LICENSE: ${{ secrets.INSTALL4J_LICENSE }}
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:        
          artifacts: build/artifacts/*
          tag: ${{ env.product_version }} 
          name: ${{ env.release_name }}
          prerelease: ${{ env.is_prerelease }}
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update maps on website
        run: .build/update-maps-on-website/run
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          PUSH_TO_WEBSITE_TOKEN: ${{ secrets.PUSH_TO_WEBSITE_TOKEN }}
      - name: Run Ansible to Deploy
        run: |
          pip install ansible==2.9.13
          cd infrastructure
          echo "$ANSIBLE_VAULT_PASSWORD" > vault_password
          # TODO: deploy to production temporarily disabled, need to be sure this is 'safe'
          # and won't disconnect users or otherwise cause problems
          echo "Deploy to production temporarily disabled"
          echo ./run_ansible --environment production
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
