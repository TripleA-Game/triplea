dist: xenial
sudo: false
language: java
if: tag is blank

# Note: Travis generally does not allocate more than 5 VMs at once.
# Avoid running more than 5 jobs in parallel. Try to keep the jobs
# balanced so that they each take about the same amount of time.

# Note: We download Java 11.0.5 for a few reasons:
# - jcenter no longer allows https TLS1.0 connection (this is seen as
#   a gradle failed to download plugin error)
# - Travis has Java 11.0.2 baked in to it, 11.0.2 does not have a
#   recent patch (2019-10) to allow Java 11 to use a compatible version
#   of TLS.
# To overcome this situation, we emulate the travis 'install-jdk' script
# and install a latest Java 11. For reference:
#   https://sormuras.github.io/blog/2017-12-08-install-jdk-on-travis.html
# Java12 does not have this issue, we do not download the Java11 script
# for that JVM or else we would be overriding Java12 with Java11.  
#
# Additional note: The export commands seem to not apply when extracted
# to a script and seemingly only work when located in the main travis config
# here.
#

jobs:
  include:
    - stage: verify
      env: "Static Verification"
      jdk: openjdk11
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install: skip
      script:
        ## shellcheck all shell scripts
        - find .travis/ -type f | xargs grep -lE "^#\!/bin/bash$" | xargs shellcheck
        - .travis/check-links || travis_terminate 1;
        - .travis/find-unused-dbunit-datasets || travis_terminate 1
        - .travis/find-unmatched-test-packages || travis_terminate 1;
        - .travis/find-orphaned-tests || travis_terminate 1;
        - .travis/check-custom-style || travis_terminate 1;
        - ./gradlew --parallel validateYamls spotlessCheck checkstyleMain checkstyleTest pmdMain pmdTest
    - stage: verify
      env: "Unit & Integration Tests"
      jdk: openjdk11
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      addons: {postgresql: "10"}
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install: skip
      script:
        - .travis/setup_database
        - .travis/launch-http-server
        - ./gradlew --parallel test integTest jacocoTestReport
        - bash <(curl -s https://codecov.io/bash)  # upload coverage report - https://github.com/codecov/example-gradle
    - stage: verify
      env: "Unit Tests"
      jdk: openjdk12
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
      install: skip
      script:
        - ./gradlew --parallel test
    - stage: verify
      env: "Master Branch: Sonar Analysis"
      jdk: openjdk11
      if: (branch = master) and (repo = 'triplea-game/triplea') and (type != 'pull_request')
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      git:
        depth: false
      addons:
        sonarcloud:
          organization: "triplea-game"
          token:
            secure: "FQ7dfyxK45ZhQizY0VV6vCboKCWh1WIMNx42qrNtTITrWQgONK5agh1i7AqGTSGuLLLPWGRzEWlcJcROyHv5Q2Oh/TINh4Zb7vWUVBJn3ydqMGM201xnPrcLTQNrhHk0bw3StN3bYO+or5lzEuYPSpZCz2GdD5Fc+bTr4EZfhA4YOIHayEEnI0unErTnl5lbIs9U0jnm1ojPp3+V4gg5+7lVEImReTeZCfHX2BwVNocezDQt69QuGz0ajK90pawvzBDZ7SpVIRK1KZRQmWM5e2HPkeV0KdbdINKarsmSL1wLQ1Tb8Iww7LTUomyKgi0XFDpdTPdwyhmXoCWESzVZV0WG6i3POc8SoCFOzY2JZ9UdEDh6YUgGHTBpChZ8hmPNjp5y+0BibrmRi6KdULol2u1mtwC4M+ej4x5S9XSbKBbKtmZALzv0PdZdnBlV0Si533+ZuLy4E1XBupEhNKtmJFi3zbX4M0qlxMNQToqtBJ+0wT5OREnDIu3PLx3nQo+fd1QSZJFR5ZI3hhQkcnjsR+jx8EZ6fRO7wjbU1E08wUNo0tWhrJqV+CklYx5lrax86o0veJIb3jls0aMmyUibMfO/1ha5wuM1O5mlJANf4wcWCo6HHIe6+eShgf1lF/u2+q/izTnGzdpFemhblS3ZMm0R+LVB9kmosEIRakhcqEc="
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install: skip
      script:
        - ./gradlew --parallel sonarqube
    - stage: verify
      env: "Smoke Test"
      jdk: openjdk11
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      addons: {postgresql: "10"}
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install: skip
      script:
        - ./.travis/setup_database
        - ./.travis/run_smoke_tests
    - stage: deploy artifacts
      env: "Upload to Github Releases"
      if: (branch = master) and (repo = 'triplea-game/triplea') and (type != 'pull_request')
      install: skip
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      script:
        - ./.travis/setup_gpg
        ## Update product version to include build number.
        ## EG: replace "2.0.0" to be "2.0.15555";
        - sed -i "s/.0 *$/.$TRAVIS_BUILD_NUMBER/" game-core/src/main/resources/META-INF/triplea/product.properties
        - ./.travis/do_release
      deploy:
        jdk: openjdk11
        provider: releases
        addons:
          apt:
            packages:
              # python for map file splitter
              - python3
              - python3-yaml
        api_key:
          secure: nxaqYrkXLGL3W20/eCnf63DLjMrQAhEuW44jggh1/nI383goa+u6w0bBtWCxRdVzos7t4dpVfS6+kv6oIHacm9zVA+RYrqy5opzCJhq8lmXVVRijbALzUeiFif2HURMaKWj0ynRNVlAyBHzazPTLZVWywifpdSubSkuMWkl20cmuKu/Hg3c1EC9se3OYhhTHx3Hya7xSrctrDEYLsEBAUZzkKfscqRVqwwltS88CgIMtRISDpSBGrtH0t1uAH6NitTSguGgb+QEpqnELcRLymX2G1yzMA4Xr5c/L34MfbBKf8vIuG9t411xYuLoyKoUbroTWxSnPwlSy6PHz+QJ7UCXbDkATOGO3chxlKxglppvI/G3n2YP5Zf2dAaDlHblpvarh55i/4i4sKB2AbvvzkIHrQJwUgmLCbpN8/Vp9GWcGkd6i5U7F8tNInCs6ttX3oGvGOfYEXs02Ctyiea4LAqk4S7GZTuV2QXqxXglL4eRIwZ4UETiwgoAAtHma63Eq7+9t2ykMlk7zAK96FGwJrB97wa08aPuSxL94IYEBmn9Ht/vKXRiNQMvpnfp4rWQtL3cqbVyYAg5EjKb4PsBmnb91+RXtnWFOY1RpZGt8sPXYd+KZYzN1BXTFJEpaLLsIDN6r7nMcAvJDUmucaM+m7giPXz1ZBGAic3UBM1qMCgI=
        file_glob: true
        file: build/artifacts/*
        skip_cleanup: true        
        prerelease: true
        on:
          tags: false
          repo: triplea-game/triplea
          branch: master
    - stage: deploy artifacts
      env: "Deploy to Prerelease"
      if: (branch = master) and (repo = 'triplea-game/triplea') and (type != 'pull_request')
      language: python
      python: "3.6"
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      addons:
        apt:
          packages:
            - sshpass
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install:
        - pip install ansible
      script:
        - sed -i "s/.0$/.$TRAVIS_BUILD_NUMBER/" game-core/src/main/resources/META-INF/triplea/product.properties
        - version=$(cat game-core/src/main/resources/META-INF/triplea/product.properties | tr -d ' ' | sed 's/.*=//')
        - eval "$(ssh-agent -s)"
        - cd infrastructure
        - ./build_deployment_artifacts
        - echo "$ANSIBLE_VAULT_PASSWORD" > vault_password
        - ./run_deployment "$version" -i ansible/inventory/prerelease
    - stage: deploy production
      env: "Deploy to Producton"
      if: (branch = master) and (repo = 'triplea-game/triplea') and (type != 'pull_request')
      language: python
      python: "3.6"
      addons:
        apt:
          packages:
            - sshpass
      cache:
        directories:
          - '$HOME/.gradle'
          - '.gradle'
          - '~/jdk-11.0.5+10'
      before_install:
        - ./.travis/install_java_11.0.5
        - export JAVA_HOME=~/jdk-11.0.5+10
        - export PATH=${JAVA_HOME}/bin:$PATH
        - java --version
      install:
        - pip install ansible
      script:
        - version="2.0.16817"
        - ./infrastructure/download_deployment_artifacts "$version" 
        - eval "$(ssh-agent -s)"
        - cd infrastructure
        - echo "$ANSIBLE_VAULT_PASSWORD" > vault_password
        # - ./run_deployment "$version" -i ansible/inventory/production
after_failure:
  - echo "================ Build step 'after_failure' =================" > /dev/null
  - test "$TRAVIS_EVENT_TYPE" != "pull_request" && test "$TRAVIS_BRANCH" = master && ./.travis/report_build_status FAILURE
